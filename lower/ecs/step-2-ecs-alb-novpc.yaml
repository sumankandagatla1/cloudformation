AWSTemplateFormatVersion: '2010-09-09'
Description: Launches external facing ALB for ECS

Parameters:
  EnvironmentName:
    Type: String
    Description: "Environment Name"
    AllowedValues:
      - development
      - sandbox
      - staging
      - production
    Default: staging

  VpcId:
    Type : 'AWS::EC2::VPC::Id'
    Description : Exisitng VPC from your region
    ConstraintDescription : Must be an existing VPC

  PublicSubnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: The list of SubnetIds in your VPCs
    ConstraintDescription: >-
      must be a list of at least two existing public subnets associated with at least
      two different availability zones. They should be residing in the selected
      VPC. 

  CertificateArn:
    Type: String
    Description: "Enter the ACM certificate ARN"

Resources:
  EcsSecurityGroupIngressFromPublicALB:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress from the public ALB
      GroupId:
        Fn::ImportValue: !Sub ${EnvironmentName}:ContainerSecurityGroup
      IpProtocol: -1
      SourceSecurityGroupId: !Ref 'PublicLoadBalancerSG'

  PublicLoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the public facing load balancer
      VpcId: !Ref VpcId
      SecurityGroupIngress:          
          - CidrIp: 0.0.0.0/0
            IpProtocol: -1
  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      LoadBalancerAttributes:
      - Key: idle_timeout.timeout_seconds
        Value: '30'
      Subnets: !Ref PublicSubnets
      SecurityGroups: [!Ref 'PublicLoadBalancerSG']
 
  BUAPITargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref VpcId
  PublicLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - PublicLoadBalancer
    Properties:
      Certificates:
        - CertificateArn: !Ref CertificateArn
      DefaultActions:
        - TargetGroupArn: !Ref 'BUAPITargetGroup'
          Type: 'forward'
      LoadBalancerArn: !Ref 'PublicLoadBalancer'
      Port: 5020
      Protocol: HTTPS
  buapirepo:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: 'aar-api'

Outputs:
  BUAPIRepo:
    Description: url of the ecr repo with docker image
    Value: !Ref buapirepo
    Export:
      Name: !Sub ${EnvironmentName}:BUAPIRepo
  PublicListener:
    Description: The ARN of the public load balancer's Listener
    Value: !Ref PublicLoadBalancerListener
    Export:
      Name: !Sub ${EnvironmentName}:PublicListener
  ExternalUrl:
    Description: The url of the external load balancer
    Value: !Sub http://${PublicLoadBalancer.DNSName}
    Export:
      Name: !Sub ${EnvironmentName}:ExternalUrl
